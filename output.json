{
  "exercises": {
    "valid": [
      {
        "premises": [
          "( ( Q & ( Q & P ) ) & ( P & Q ) )",
          "( P | ( ( Q | ( P & Q ) ) | ( P & P ) ) )",
          "( ( P & P ) & Q )"
        ],
        "conclusion": "( ( Q | P ) & Q )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( ( P & P ) | Q ) & ( P & P ) )",
          "( ( Q & P ) & ( Q & Q ) )",
          "( ( ( P & P ) | P ) | P )"
        ],
        "conclusion": "( ( ( P & Q ) | ( Q | Q ) ) | ( P & Q ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( ( ( Q | P ) | ( P & P ) ) | P ) | Q )",
          "( ( P & ( Q | P ) ) | Q )",
          "( ( ( Q | P ) | ( P | P ) ) | P )"
        ],
        "conclusion": "( ( Q & ( P | Q ) ) | ( P & P ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( ( Q | P ) & P ) & ( P & P ) )",
          "( P & ( P | Q ) )",
          "( ( Q & ( P & ( Q | P ) ) ) | P )"
        ],
        "conclusion": "( ( ( ( Q | Q ) & Q ) & Q ) | ( P | Q ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( Q & ( Q | ( P | ( Q & Q ) ) ) ) & P )",
          "( Q & ( Q & ( ( Q | Q ) & P ) ) )",
          "( P & ( ( ( Q & P ) | Q ) | ( Q | P ) ) )"
        ],
        "conclusion": "( ( Q & P ) & P )",
        "is_valid": true
      },
      {
        "premises": [
          "( Q & ( P & ( Q & Q ) ) )",
          "( Q | ( ( P & ( P & Q ) ) & ( P & P ) ) )",
          "( Q & ( ( ( Q & P ) | ( P & P ) ) & Q ) )"
        ],
        "conclusion": "( ( ( Q & Q ) | P ) & ( P & Q ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( Q | P ) & ( P & P ) )",
          "( ( ( Q | P ) & P ) | P )",
          "( Q | ( P | ( Q | ( P & P ) ) ) )"
        ],
        "conclusion": "( ( ( P & P ) & Q ) | ( P | Q ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( Q & ( ( Q | P ) | ( P & Q ) ) )",
          "( Q | ( P & ( P & Q ) ) )",
          "( P & ( P | Q ) )"
        ],
        "conclusion": "( ( Q | P ) | ( P | Q ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( ( ( P & Q ) & P ) & ( P | P ) ) | Q )",
          "( ( P & ( P | P ) ) | P )",
          "( ( ( Q | P ) | ( P & P ) ) | ( P & P ) )"
        ],
        "conclusion": "( ( P | ( Q & Q ) ) & ( Q & Q ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( P & ( ( Q | P ) | P ) ) | ( Q & Q ) )",
          "( ( ( Q & Q ) | Q ) | Q )",
          "( Q & ( Q | Q ) )"
        ],
        "conclusion": "( ( ( P | Q ) | Q ) | ( P & P ) )",
        "is_valid": true
      },
      {
        "premises": [
          "( ( Q | P ) | Q )",
          "( P | ( Q | P ) )",
          "( ( Q & ( Q | ( Q | P ) ) ) | ( Q | P ) )"
        ],
        "conclusion": "( ( Q & P ) | ( P | Q ) )",
        "is_valid": true
      }
    ],
    "invalid": [],
    "discarded_valid": [],
    "discarded_invalid": [
      {
        "premises": [
          "( ( Q | P ) | ( P | Q ) )",
          "( ( P | ( P & Q ) ) | ( Q | Q ) )",
          "( ( Q | Q ) & ( Q | Q ) )"
        ],
        "conclusion": "( ( Q | P ) & P )",
        "is_valid": false
      },
      {
        "premises": [
          "( ( ( Q | ( P | Q ) ) | Q ) | Q )",
          "( Q | ( P & Q ) )",
          "( ( ( ( P & Q ) | P ) | Q ) | ( Q & Q ) )"
        ],
        "conclusion": "( ( P | ( Q & P ) ) | P )",
        "is_valid": false
      }
    ],
    "discarded_not_fit": []
  },
  "stats": {
    "num_gen_valid": 11,
    "num_gen_invalid": 0,
    "num_discarded_valid": 0,
    "num_discarded_invalid": 2,
    "num_discarded_not_fit": 0,
    "num_req_valid": 11,
    "num_req_invalid": 0,
    "num_gen": 11,
    "num_discarded": 2,
    "num_req": 11
  },
  "request": {
    "num_students": 3,
    "num_exercises": 11,
    "num_premises": 3,
    "conectives": [
      "and",
      "or"
    ],
    "atoms": [
      "P",
      "Q"
    ],
    "compl_min": 2,
    "compl_max": 5,
    "num_valid": 11,
    "num_invalid": 0
  },
  "time": 0.40088796615600586
}
